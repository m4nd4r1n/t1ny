name: ci

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      src_changed: ${{ steps.changed-files-yaml.outputs.src_any_changed }}
      src_build_only_changed: ${{ steps.changed-files-yaml.outputs.src_build_only_any_changed }}
      test_changed: ${{ steps.changed-files-yaml.outputs.test_any_changed }}
      stories_changed: ${{ steps.changed-files-yaml.outputs.stories_any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: tj-actions/changed-files@v39
        id: changed-files-yaml
        with:
          files_yaml: |
            src:
              - src/**
            src_build_only:
              - src/**
              - '!src/**/*.test.ts'
              - '!src/**/*.test.tsx'
              - '!src/**/*.stories.ts'
              - '!src/**/*.stories.tsx'
              - '!src/**/*.stories.mdx'
            test:
              - '**/*.test.ts'
              - '**/*.test.tsx'
            stories:
              - '**/*.stories.ts'
              - '**/*.stories.tsx'
              - '**/*.stories.mdx'

  cache-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

  lint:
    runs-on: ubuntu-latest
    needs:
      - changed_files
      - cache-deps
    if: needs.changed_files.outputs.src_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs:
      - changed_files
      - cache-deps
    if: needs.changed_files.outputs.test_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

  build:
    runs-on: ubuntu-latest
    needs:
      - changed_files
      - cache-deps
    if: needs.changed_files.outputs.src_build_only_changed == 'true'

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Create .env.production.local
        shell: bash
        run: |
          echo "${{ secrets.ENVIRONMENTS }}" > .env.production.local

      - name: Install dependencies
        run: pnpm install

      - name: Run build
        run: pnpm build

  chromatic-deploy:
    environment:
      name: Storybook
      url: ${{ steps.chromatic.outputs.storybookUrl }}
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - build
    if: |
      always() && !cancelled() && !failure() &&
      needs.changed_files.outputs.stories_changed == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Publish to Chromatic
        id: chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          zip: true

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: 'ðŸš€ Storybook: ${{ steps.chromatic.outputs.storybookUrl }}'
